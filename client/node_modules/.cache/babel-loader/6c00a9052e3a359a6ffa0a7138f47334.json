{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Projects\\\\printable_report_card\\\\client\\\\src\\\\components\\\\body\\\\student\\\\graphicstatus\\\\sem3gs\\\\BarChart.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChart = () => {\n  _s();\n\n  const marks = useSelector(state => state.marks);\n  const {\n    sem3\n  } = marks;\n  const p_am3 = sem3.am3_p;\n  const p_dsgt = sem3.dsgt_p;\n  const p_ds = sem3.ds_p;\n  const p_cg = sem3.cg_p;\n  const p_dlcoa = sem3.dlcoa_p;\n  const p_oop = sem3.oop_p;\n  const p_minipro1 = sem3.minipro1_p;\n  const all = useSelector(state => state.all);\n  const {\n    compare\n  } = all;\n  var A = 0;\n  var B = 0;\n  var C = 0;\n  var D = 0;\n  var E = 0;\n  var F = 0;\n  var G = 0;\n\n  const call = () => {\n    if (compare) {\n      compare.map(data => {\n        if (A <= data.am3_p) {\n          A = data.am3_p;\n        }\n\n        if (B <= data.dsgt_p) {\n          B = data.dsgt_p;\n        }\n\n        if (C <= data.ds_p) {\n          C = data.ds_p;\n        }\n\n        if (D <= data.cg_p) {\n          D = data.cg_p;\n        }\n\n        if (E <= data.dlcoa_p) {\n          E = data.dlcoa_p;\n        }\n\n        if (F <= data.oop_p) {\n          F = data.oop_p;\n        }\n\n        if (G <= data.minipro1_p) {\n          G = data.minipro1_p;\n        }\n\n        return null;\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [call(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          labels: ['Am3', 'Dsgt', 'Ds', 'Cg', 'Dlcoa', 'Oop', 'Mini Project 1'],\n          datasets: [{\n            label: 'Your Percentage',\n            data: [p_am3, p_dsgt, p_ds, p_cg, p_dlcoa, p_oop, p_minipro1],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(200, 249, 2, 0.6)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'lightgreen'],\n            borderWidth: 1\n          }, {\n            label: 'Highest Percentage',\n            data: [A, B, C, D, E, F, G],\n            backgroundColor: ['orange'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'lightgreen'],\n            borderWidth: 1\n          }]\n        },\n        height: 400,\n        weight: 600,\n        options: {\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              labels: {\n                color: 'white',\n                font: {\n                  size: 20\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              title: {\n                display: true\n              },\n              ticks: {\n                font: {\n                  size: 18\n                },\n                color: 'white'\n              }\n            },\n            x: {\n              ticks: {\n                font: {\n                  size: 18\n                },\n                color: 'white'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      align: \"center\",\n      style: {\n        color: 'white'\n      },\n      children: [\"Note: If failed in a subject, your graph won't show\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 110\n      }, this), \"If marks are not entered, the highest percentage graph won't display as well\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BarChart, \"Y7FpNPJEy5GyjklfRpVyXMjituk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useSelector","Bar","BarChart","marks","state","sem3","p_am3","am3_p","p_dsgt","dsgt_p","p_ds","ds_p","p_cg","cg_p","p_dlcoa","dlcoa_p","p_oop","oop_p","p_minipro1","minipro1_p","all","compare","A","B","C","D","E","F","G","call","map","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","maintainAspectRatio","plugins","legend","color","font","size","scales","y","title","display","ticks","x"],"sources":["D:/Coding Projects/printable_report_card/client/src/components/body/student/graphicstatus/sem3gs/BarChart.js"],"sourcesContent":["import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nconst BarChart = () =>{\r\n    const marks = useSelector(state => state.marks)\r\n    const {sem3} = marks\r\n    const p_am3 = sem3.am3_p\r\n    const p_dsgt = sem3.dsgt_p\r\n    const p_ds = sem3.ds_p\r\n    const p_cg = sem3.cg_p\r\n    const p_dlcoa = sem3.dlcoa_p\r\n    const p_oop = sem3.oop_p\r\n    const p_minipro1 = sem3.minipro1_p\r\n\r\n    const all = useSelector(state => state.all)\r\n    const {compare} = all\r\n\r\n    var A = 0\r\n    var B = 0\r\n    var C = 0\r\n    var D = 0\r\n    var E = 0\r\n    var F = 0\r\n    var G = 0\r\n\r\n   const call = () => {\r\n       if(compare){\r\n           compare.map(data =>{\r\n                if(A<=data.am3_p){\r\n                    A = data.am3_p\r\n                }\r\n                if(B<=data.dsgt_p){\r\n                    B = data.dsgt_p\r\n                }\r\n                if(C<=data.ds_p){\r\n                    C = data.ds_p\r\n                }\r\n                if(D<=data.cg_p){\r\n                    D = data.cg_p\r\n                }\r\n                if(E<=data.dlcoa_p){\r\n                    E = data.dlcoa_p\r\n                }\r\n                if(F<=data.oop_p){\r\n                    F = data.oop_p\r\n                }\r\n                if(G<=data.minipro1_p){\r\n                    G = data.minipro1_p\r\n                }\r\n                return null\r\n            }   \r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                call()\r\n            }\r\n            <div>\r\n            <Bar\r\n                data={{\r\n                    labels: ['Am3', 'Dsgt', 'Ds', 'Cg','Dlcoa','Oop','Mini Project 1'],\r\n                    datasets: [{\r\n                        label: 'Your Percentage',\r\n                        data: [p_am3,p_dsgt,p_ds,p_cg,p_dlcoa,p_oop,p_minipro1],\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)',\r\n                            'rgba(200, 249, 2, 0.6)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)',\r\n                            'lightgreen'\r\n                        ],\r\n                        borderWidth: 1\r\n                    },\r\n                    {\r\n                        label: 'Highest Percentage',\r\n                        data: [A,B,C,D,E,F,G],\r\n                        backgroundColor: [\r\n                            'orange'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)',\r\n                            'lightgreen'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }\r\n                    ]\r\n                }}\r\n                height={400}\r\n                weight={600}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    plugins: {\r\n                        legend: {\r\n                            labels: {\r\n                                color: 'white',\r\n                                font:{\r\n                                    size:20\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    scales: {\r\n                        y: {\r\n                            title: {\r\n                                display:true,\r\n                            },\r\n                            ticks:{\r\n                                font:{\r\n                                    size:18\r\n                                },\r\n                                color:'white'\r\n                            }\r\n                        },\r\n                        x: {\r\n                            ticks:{\r\n                                font:{\r\n                                    size:18\r\n                                },\r\n                                color:'white'\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n            </div>\r\n            <h4 align=\"center\" style={{ color: 'white' }}>Note: If failed in a subject, your graph won't show<br></br>If marks are not entered, the highest percentage graph won't display as well</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarChart"],"mappings":"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"},"metadata":{},"sourceType":"module"}